// The Hexa Compiler
// Copyright (C) 2018-2020  Oleg Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

/// List of all codegen targets
enum Generators: String {
	// primary
	JavaScript
	Native
	// TODO rename to Cxx
	// TODO Custom
}

/// Get target by name
fun availableGenerators(name: String): Generators? {
	switch name {
	case "js": return Generators.JavaScript
	case "native": return Generators.Native

	// none
	case _:
		return null
}}

/// Get standard library for target
fun setLibrary(target: Generators, options: [String], defines: Any): [String] {
	let files: [String] = []
	switch target {
		case Generators.JavaScript:
			defines.js = defines.js ?? true
			files.push('/js/js')
			if (options.includes('nodejs')) {
				// Note pushing extras in reverse order
				files.unshift('/nodejs/nodejs')
			}
			if (options.includes('browser')) {
				files.unshift('/browser/html')
			}

		case Generators.Native:
			defines.native = defines.native ?? true
			files.push('/c/c')
	}

	return files
}
