// The Hexa Compiler
// Copyright (C) 2021  Oleg Petrenko
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

/// `module.hexa`
class Module {
	var file: String = '.hexa'
	var path: String = 'module'
	var nodes: [Node] = []
	let exported: [String : Node] = [:]
	let imported: [String : Node] = [:]
	// TODO private exports

	new () {
	}
}

/// Global data container
class Project {
	let mapDecorators: [Node : [Decorator]] = [:]
	let mapNames: [Node : Node] = [:]
	let mapModules: [Node : Module] = [:]
	let data: [Node : NodeData] = [:]
	let hints: [Hint] = []
	// TODO Defines to Map Enums Bool String Int Float in the Project
	var defines: Any = {}
	var name: String = 'Hexa Project'
	var json: String = 'hexa.json'
	var roots: [String] = []

	let globals: [String : Node] = [:]
	let moduleName: [String] = []
	let moduleInfo: [Module] = []

	new () {
	}
}
